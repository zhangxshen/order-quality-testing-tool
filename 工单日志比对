import pandas as pd
import datetime


def main():
    path_target = input("请输入文件路径:")
    print("开始进行工单质检，请稍候……")
    starttime = datetime.datetime.now()

    # 读取源文件，并把操作对象和网元名称为空的数据去掉
    huawei = pd.read_excel(
        path_target,
        usecols=['操作名称', '操作用户', '时间', '操作对象', '详细信息'],
        sheet_name='华为网管日志')
    huawei = huawei.dropna(axis=0, subset=["操作对象"])

    zte = pd.read_excel(
        path_target,
        sheet_name='U31网管日志')
    zte = zte.dropna(axis=0, subset=["操作对象"])
    zte = zte.drop('操作', axis=1)

    zte = zte.rename(columns={'命令功能': '操作'})

    ume = pd.read_excel(
        path_target,
        sheet_name='UME网管日志')
    ume = ume.dropna(axis=0, subset=["操作对象"])
    ume = ume.rename(columns={'操作名称': '操作'})

    father_order = pd.read_excel(
        path_target,
        usecols=['工单编号', '故障发生地市', '网管告警消除时间', '网元名称', '告警对象', '告警标准名',
                 '业务状态', '自动审核业务状态', '业务影响分类标签', '网络分类二级', '网络分类三级', '故障发生时间',
                 '故障发现时间', '申请报结操作时间', '预处理意见'],
        sheet_name='主单')
    father_order['预处理意见'] = father_order['预处理意见'].apply(str)
    # 只保留群路口工单
    father_order = father_order.loc[father_order['预处理意见'].str.contains('对端')]
    father_order = father_order.dropna(axis=0, subset=["网元名称"])
    father_order = father_order.dropna(axis=0, subset=["业务影响分类标签"])
    father_order = father_order.loc[father_order['业务影响分类标签'].str.contains('单边')]

    son_order = pd.read_excel(
        path_target,
        usecols=[
            '工单编号', '故障发生地市', '子告警消除时间', '子告警网元名称', '子告警定位对象', '子告警标准名',
            '子告警业务状态', '自动审核业务状态'],
        sheet_name='工单子告警导出')
    son_order = son_order.rename(columns={'子告警消除时间': '网管告警消除时间',
                                          '子告警网元名称': '网元名称',
                                          '子告警定位对象': '告警对象',
                                          '子告警标准名': '告警标准名',
                                          '子告警业务状态': '业务状态',
                                          })
    son_order = son_order.dropna(axis=0, subset=["网元名称"])

    # 去掉日期字段可能存在的空格字符串
    huawei['时间'] = huawei['时间'].map(str.strip)

    # 敏感操作列表
    sens_oper = ['告警清除', '设置全网告警预投入', '设置告警预投入', '告警反转', '设置物理端口的属性',
                 '设置网元的备用网关', '设置网元的主用网关', '修改网元', '设置']

    # 先将两个日志表加上“是否敏感操作”列
    def hw_sens_oper(x):
        if x["操作名称"] in sens_oper:
            return '是'

    def zte_sens_oper(x):
        if x["操作"] in sens_oper:
            return '是'

    huawei.loc[:, "是否敏感操作"] = huawei.apply(hw_sens_oper, axis=1)
    zte.loc[:, "是否敏感操作"] = zte.apply(zte_sens_oper, axis=1)
    ume.loc[:, "是否敏感操作"] = ume.apply(zte_sens_oper, axis=1)

    # 通过调整字段数据类型节省内存
    for a in [huawei, zte, ume, father_order, son_order]:
        for col in a.columns:
            num_unique_values = len(a[col].unique())
            num_total_values = len(a[col])
            if num_unique_values != 0 and num_total_values != 0:
                if num_unique_values / num_total_values < 0.5:
                    a.loc[:, col] = a[col].astype('category')
                else:
                    a.loc[:, col] = a[col]

    # 为了能merge匹配，网元名称和操作对象必须是同个数据类型
    huawei.loc[:, '操作对象'] = huawei['操作对象'].astype('category')
    zte.loc[:, '操作对象'] = zte['操作对象'].astype('category')
    ume.loc[:, '操作对象'] = ume['操作对象'].astype('category')

    # 日志与工单进行合并
    h_f = pd.merge(huawei,
                   father_order,
                   left_on='操作对象',
                   right_on='网元名称')

    z_f = pd.merge(zte.loc[:, [
        '操作', '是否敏感操作', '用户名称', '操作结束时间', '操作对象', '详细信息']],
        father_order,
        left_on='操作对象',
        right_on='网元名称')

    u_f = pd.merge(ume.loc[:, [
        '操作', '是否敏感操作', '用户名称', '操作结束时间', '操作对象', '详细信息']],
        father_order,
        left_on='操作对象',
        right_on='网元名称')

    h_s = pd.merge(huawei,
                   son_order,
                   left_on='操作对象',
                   right_on='网元名称')

    h_s = pd.merge(h_s,
                   father_order.loc[:,
                                    ['工单编号',
                                        '业务影响分类标签',
                                        '网络分类二级',
                                        '网络分类三级',
                                        '故障发生时间',
                                        '故障发现时间',
                                        '申请报结操作时间',
                                        '预处理意见']],
                   how='left',
                   left_on='工单编号',
                   right_on='工单编号')

    z_s = pd.merge(zte.loc[:, [
        '操作', '是否敏感操作', '用户名称', '操作结束时间', '操作对象', '详细信息']],
        son_order,
        left_on='操作对象',
        right_on='网元名称')

    z_s = pd.merge(z_s,
                   father_order.loc[:,
                                    ['工单编号',
                                        '业务影响分类标签',
                                        '网络分类二级',
                                        '网络分类三级',
                                        '故障发生时间',
                                        '故障发现时间',
                                        '申请报结操作时间',
                                        '预处理意见']],
                   how='left',
                   left_on='工单编号',
                   right_on='工单编号')

    u_s = pd.merge(ume.loc[:, [
        '操作', '是否敏感操作', '用户名称', '操作结束时间', '操作对象', '详细信息']],
        son_order,
        left_on='操作对象',
        right_on='网元名称')

    u_s = pd.merge(u_s,
                   father_order.loc[:,
                                    ['工单编号',
                                        '业务影响分类标签',
                                        '网络分类二级',
                                        '网络分类三级',
                                        '故障发生时间',
                                        '故障发现时间',
                                        '申请报结操作时间',
                                        '预处理意见']],
                   how='left',
                   left_on='工单编号',
                   right_on='工单编号')

    # 日期全部转换为datetime格式
    for col in ['时间', '网管告警消除时间', '申请报结操作时间']:
        h_f[col] = pd.to_datetime(h_f[col], errors='coerce')

    for col in ['操作结束时间', '网管告警消除时间', '申请报结操作时间']:
        z_f[col] = pd.to_datetime(z_f[col], errors='coerce')

    for col in ['操作结束时间', '网管告警消除时间', '申请报结操作时间']:
        u_f[col] = pd.to_datetime(u_f[col], errors='coerce')

    for col in ['时间', '网管告警消除时间', '申请报结操作时间']:
        h_s[col] = pd.to_datetime(h_s[col], errors='coerce')

    for col in ['操作结束时间', '网管告警消除时间', '申请报结操作时间']:
        z_s[col] = pd.to_datetime(z_s[col], errors='coerce')

    for col in ['操作结束时间', '网管告警消除时间', '申请报结操作时间']:
        u_s[col] = pd.to_datetime(u_s[col], errors='coerce')

    # 复制一份数据用于做疑似制造工单的核查
    h_f2 = h_f
    h_s2 = h_s
    z_f2 = z_f
    z_s2 = z_s
    u_f2 = u_f
    u_s2 = u_s

    for h in [h_f, h_s]:
        i = 0
        for j in h.itertuples():
            oper_time = getattr(j, '时间')
            dis_time = getattr(j, '网管告警消除时间')
            apply_time = getattr(j, '申请报结操作时间')
            a = dis_time - oper_time
            b = apply_time - oper_time
            if 0 < a.total_seconds() < 900:
                h.at[i, '网管操作时间与告警消除时间相差小于15分钟'] = '是'
                h.at[i, '问题工单'] = '是'
            else:
                h.at[i, '问题工单'] = '否'
            if 0 < b.total_seconds() < 900:
                h.at[i, '网管操作时间与申请报结时间相差小于15分钟'] = '是'
            else:
                h.at[i, '网管操作时间与申请报结时间相差小于15分钟'] = '否'
            i = i + 1

    for z in [z_f, z_s, u_f, u_s]:
        i = 0
        for j in z.itertuples():
            oper_time = getattr(j, '操作结束时间')
            dis_time = getattr(j, '网管告警消除时间')
            apply_time = getattr(j, '申请报结操作时间')
            a = dis_time - oper_time
            b = apply_time - oper_time
            if 0 < a.total_seconds() < 900:
                z.at[i, '网管操作时间与告警消除时间相差小于15分钟'] = '是'
                z.at[i, '问题工单'] = '是'
            else:
                z.at[i, '问题工单'] = '否'
            if 0 < b.total_seconds() < 900:
                z.at[i, '网管操作时间与申请报结时间相差小于15分钟'] = '是'
            else:
                z.at[i, '网管操作时间与申请报结时间相差小于15分钟'] = '否'
            i = i + 1

    for h in [h_f2, h_s2]:
        i = 0
        for j in h.itertuples():
            oper_time = getattr(j, '时间')
            dis_time = getattr(j, '故障发生时间')
            a = dis_time - oper_time
            if 0 < a.total_seconds() < 300:
                h.at[i, '疑似制造工单'] = '是'
            else:
                h.at[i, '疑似制造工单'] = '否'
            i = i + 1

    for z in [z_f2, z_s2, u_f2, u_s2]:
        i = 0
        for j in z.itertuples():
            oper_time = getattr(j, '操作结束时间')
            dis_time = getattr(j, '故障发生时间')
            a = dis_time - oper_time
            if 0 < a.total_seconds() < 300:
                z.at[i, '疑似制造工单'] = '是'
            else:
                z.at[i, '疑似制造工单'] = '否'
            i = i + 1

    order_1 = [
        '操作名称',
        '是否敏感操作',
        '操作用户',
        '时间',
        '操作对象',
        '详细信息',
        '工单编号',
        '问题工单',
        '故障发生地市',
        '网管告警消除时间',
        '网元名称',
        '告警对象',
        '告警标准名',
        '业务状态',
        '自动审核业务状态',
        '业务影响分类标签',
        '网络分类二级',
        '网络分类三级',
        '故障发生时间',
        '故障发现时间',
        '申请报结操作时间',
        '网管操作时间与告警消除时间相差小于15分钟',
        '网管操作时间与申请报结时间相差小于15分钟',
        '预处理意见']

    order_2 = [
        '操作',
        '是否敏感操作',
        '用户名称',
        '操作结束时间',
        '操作对象',
        '详细信息',
        '工单编号',
        '问题工单',
        '故障发生地市',
        '网管告警消除时间',
        '网元名称',
        '告警对象',
        '告警标准名',
        '业务状态',
        '自动审核业务状态',
        '业务影响分类标签',
        '网络分类二级',
        '网络分类三级',
        '故障发生时间',
        '故障发现时间',
        '申请报结操作时间',
        '网管操作时间与告警消除时间相差小于15分钟',
        '网管操作时间与申请报结时间相差小于15分钟',
        '预处理意见']

    order_5 = [
        '操作名称',
        '是否敏感操作',
        '操作用户',
        '时间',
        '操作对象',
        '详细信息',
        '工单编号',
        '疑似制造工单',
        '故障发生地市',
        '网管告警消除时间',
        '网元名称',
        '告警对象',
        '告警标准名',
        '业务状态',
        '自动审核业务状态',
        '业务影响分类标签',
        '网络分类二级',
        '网络分类三级',
        '故障发生时间',
        '故障发现时间',
        '申请报结操作时间',
        '预处理意见']

    order_6 = [
        '操作',
        '是否敏感操作',
        '用户名称',
        '操作结束时间',
        '操作对象',
        '详细信息',
        '工单编号',
        '疑似制造工单',
        '故障发生地市',
        '网管告警消除时间',
        '网元名称',
        '告警对象',
        '告警标准名',
        '业务状态',
        '自动审核业务状态',
        '业务影响分类标签',
        '网络分类二级',
        '网络分类三级',
        '故障发生时间',
        '故障发现时间',
        '申请报结操作时间',
        '预处理意见']

    writer = pd.ExcelWriter('工单核查.xlsx')
    writer2 = pd.ExcelWriter('疑似制造工单核查.xlsx')

    hw_result = pd.concat([h_f, h_s])
    zte_result = pd.concat([z_f, z_s])
    ume_result = pd.concat([u_f, u_s])
    hw_result2 = pd.concat([h_f2, h_s2])
    zte_result2 = pd.concat([z_f2, z_s2])
    ume_result2 = pd.concat([u_f2, u_s2])

    if not hw_result.empty:
        # hw_result = hw_result[hw_result['问题工单'].isin(['是'])]
        hw_result = hw_result[order_1]
        hw_result = hw_result.drop_duplicates()
        hw_result.to_excel(writer, "华为", index=None)

    if not zte_result.empty:
        # zte_result = zte_result[zte_result['问题工单'].isin(['是'])]
        zte_result = zte_result[order_2]
        zte_result = zte_result.drop_duplicates()
        zte_result.to_excel(writer, "中兴U31", index=None)

    if not ume_result.empty:
        # ume_result = ume_result[ume_result['问题工单'].isin(['是'])]
        ume_result = ume_result[order_2]
        ume_result = ume_result.drop_duplicates()
        ume_result.to_excel(writer, "中兴UME", index=None)

    if not hw_result2.empty:
        hw_result2 = hw_result2[hw_result2['疑似制造工单'].isin(['是'])]
        hw_result2 = hw_result2[order_5]
        hw_result2 = hw_result2.drop_duplicates()
        hw_result2.to_excel(writer2, "华为", index=None)

    if not zte_result2.empty:
        zte_result2 = zte_result2[zte_result2['疑似制造工单'].isin(['是'])]
        zte_result2 = zte_result2[order_6]
        zte_result2 = zte_result2.drop_duplicates()
        zte_result2.to_excel(writer2, "中兴U31", index=None)

    if not ume_result2.empty:
        ume_result2 = ume_result2[ume_result2['疑似制造工单'].isin(['是'])]
        ume_result2 = ume_result2[order_6]
        ume_result2 = ume_result2.drop_duplicates()
        ume_result2.to_excel(writer2, "中兴UME", index=None)

    writer.save()
    writer2.save()
    print("质检完成！输出的表格与程序在同一路径下。")
    endtime = datetime.datetime.now()
    print("程序总耗时：", (endtime - starttime))
    input("直接关闭程序即可。")

main()
